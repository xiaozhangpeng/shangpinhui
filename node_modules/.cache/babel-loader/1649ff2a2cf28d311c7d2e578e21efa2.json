{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\api\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\api\\request.js","mtime":1648094285102},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["//引入axios\nimport axios from 'axios';\nimport nprogress from 'nprogress';\nimport \"nprogress/nprogress.css\"; // 在当前模块引入store\n\nimport store from '@/store'; //创建axios实例\n\nvar request = axios.create({\n  baseURL: \"/api\",\n  timeout: 5000\n}); //请求拦截器\n\nrequest.interceptors.request.use(function (config) {\n  if (store.state.detail.uuid_token) {\n    // 请求头添加一个字段（userTempId）:一定是和后台老师商量好的\n    config.headers.userTempId = store.state.detail.uuid_token;\n  } // 需要携带token带给服务器\n\n\n  if (store.state.user.token) {\n    config.headers.token = store.state.user.token;\n  }\n\n  nprogress.start();\n  return config;\n}); // 响应拦截器\n\nrequest.interceptors.response.use(function (res) {\n  nprogress.done();\n  return res.data;\n}, function (error) {\n  //服务器响应失败的回调函数\n  alert(error.message);\n}); //对外暴露request，导出\n\nexport default request;",null]}