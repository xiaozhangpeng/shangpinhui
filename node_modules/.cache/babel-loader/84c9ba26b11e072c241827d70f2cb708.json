{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Detail\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Detail\\index.vue","mtime":1647759235246},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ImageList from \"./ImageList/ImageList\";\nimport Zoom from \"./Zoom/Zoom\";\nimport { mapGetters } from \"vuex\";\nexport default {\n  name: \"Detail\",\n  data: function data() {\n    return {\n      // 加入购物车的总产品数\n      SkuNum: 1\n    };\n  },\n  components: {\n    ImageList: ImageList,\n    Zoom: Zoom\n  },\n  // 路由挂载\n  mounted: function mounted() {\n    // 派发action,获取产品的详情信息\n    this.$store.dispatch(\"getGoodInfo\", this.$route.params.skuid);\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"categoryView\", \"skuInfo\", \"spuSaleAttrList\"])), {}, {\n    // 给子组件的数据\n    skuImageList: function skuImageList() {\n      // 如果服务器的数据没有回来，skuInfo这个对象是空对象\n      return this.skuInfo.skuImageList || [];\n    }\n  }),\n  methods: {\n    // changeActive(a,b)\n    // {\n    //   console.log(a);\n    //   console.log(b);\n    // },\n    // 产品的售卖属性值切换高亮(排他思想)\n    changeActive: function changeActive(saleAttrValue, arr) {\n      // 遍历全部的售卖属性值isChecked\n      arr.forEach(function (item) {\n        item.isChecked = 0;\n      }); // 点击的那个售卖属性值\n\n      saleAttrValue.isChecked = 1;\n    },\n    // 修改文本框的产品数量\n    changeSkuNum: function changeSkuNum(event) {\n      //  用户输入进来的文本\n      var value = event.target.value * 1; // 如果用户输入进来的值是非法的\n\n      if (isNaN(value) || value < 1) {\n        this.SkuNum = 1;\n      } else {\n        // 如果正常则输出(避免小数:parseInt)\n        this.SkuNum = parseInt(value);\n      }\n    },\n    // 加入购物车的回调函数\n    addShopcar: function () {\n      var _addShopcar = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var result;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$store.dispatch(\"addOrUpdateShopCart\", {\n                  skuId: this.$route.params.skuid,\n                  skuNum: this.SkuNum\n                });\n\n              case 3:\n                result = _context.sent;\n                console.log(result); // 进行路由跳转（还要将产品的信息传递过去）\n                // 下面的这种手段进行路由跳转并传递参数可以，但是会有问题，不采用\n                // this.$router.push({name:'AddCartSuccess',query:{skuInfo:this.skuInfo,skuNum:this.SkuNum}})\n                // 会话存储\n\n                sessionStorage.setItem(\"SKUINFO\", JSON.stringify(this.skuInfo));\n                this.$router.push({\n                  name: \"AddCartSuccess\",\n                  query: {\n                    skuNum: this.SkuNum\n                  }\n                });\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                alert(error.message);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function addShopcar() {\n        return _addShopcar.apply(this, arguments);\n      }\n\n      return addShopcar;\n    }()\n  }\n};",null]}