{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\api\\index.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\api\\index.js","mtime":1648186989328},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["// 统一管理项目接口的模块\n// 引入二次封装axios\nimport request from \"./request\";\nimport mockRequests from \"./mockAjax\";\nimport { get } from \"core-js/core/dict\"; //API接口统一管理，发送请求（TypeNav）\n\nexport var reqCategoryList = function reqCategoryList() {\n  return request({\n    url: '/product/getBaseCategoryList',\n    method: 'get'\n  });\n}; // 获取banner(Home首页轮播图接口)\n\nexport var reqGetBannerList = function reqGetBannerList() {\n  return mockRequests({\n    url: '/banner',\n    method: 'get'\n  });\n}; // 获取floor的模拟接口数据\n\nexport var reqGetFloorList = function reqGetFloorList() {\n  return mockRequests({\n    url: '/floor',\n    method: 'get'\n  });\n}; // 获取search搜索模块数据 地址是:/api/list 请求方式:post\n// 当前的这个接口给服务器传递的参数params---他至少是一个空对象\n\nexport var reqGetSearchInfo = function reqGetSearchInfo(params) {\n  return request({\n    url: '/list',\n    method: 'post',\n    data: params\n  });\n}; //获取产品详情信息的接口 地址是/api/item/{ skuId } 请求方式:get\n\nexport var reqGoodsInfo = function reqGoodsInfo(skuId) {\n  return request({\n    url: \"/item/\".concat(skuId),\n    method: 'get'\n  });\n}; // 将产品添加到购物车中（获取更新某一产品的个数） 地址是/api/cart/addToCart/{ skuId }/{ skuNum } 请求方式：post\n\nexport var reqAddOrUpdateShopCart = function reqAddOrUpdateShopCart(skuId, skuNum) {\n  return request({\n    url: \"/cart/addToCart/\".concat(skuId, \"/\").concat(skuNum),\n    method: 'post'\n  });\n}; // 获取购物车列表数据接口 地址是：/api/cart/cartList 请求方式:get\n\nexport var reqCartList = function reqCartList() {\n  return request({\n    url: '/cart/cartList',\n    method: 'get'\n  });\n}; // 删除购物车产品的接口 地址是:/api/cart/deleteCart/{skuId} 请求方式:DELETE\n\nexport var reqDeleteCartById = function reqDeleteCartById(skuId) {\n  return request({\n    url: \"/cart/deleteCart/\".concat(skuId),\n    method: 'DELETE'\n  });\n}; // 切换商品选中状态 地址是：/api/cart/checkCart/{skuID}/{isChecked} 请求方式是：get\n\nexport var reqUpdateCheckedById = function reqUpdateCheckedById(skuId, isChecked) {\n  return request({\n    url: \"/cart/checkCart/\".concat(skuId, \"/\").concat(isChecked),\n    method: 'get'\n  });\n}; //获取验证码 地址是/api/user/passport/sendCode/{phone} 请求方式:get\n\nexport var reqGetCode = function reqGetCode(phone) {\n  return request({\n    url: \"/user/passport/sendCode/\".concat(phone),\n    method: 'get'\n  });\n}; //注册 地址是：/api/user/passport/register 请求方式是post  phone code password\n\nexport var reqUserRegister = function reqUserRegister(data) {\n  return request({\n    url: '/user/passport/register',\n    data: data,\n    method: 'post'\n  });\n}; //登录 地址是/api/user/passport/login 请求方式post   phone password\n\nexport var reqUserLogin = function reqUserLogin(data) {\n  return request({\n    url: '/user/passport/login',\n    data: data,\n    method: 'post'\n  });\n}; // 获取用户信息【需要带着用户的token向服务器要用户信息】 地址是：/api/user/passport/auth/getUserInfo 请求方式:get\n\nexport var reqUserInfo = function reqUserInfo() {\n  return request({\n    url: '/user/passport/auth/getUserInfo',\n    method: 'get'\n  });\n}; // 退出登录 地址是:/api/user/passport/logout 请求方式 get\n\nexport var reqLogout = function reqLogout() {\n  return request({\n    url: '/user/passport/logout',\n    method: 'get'\n  });\n}; // 获取用户地址信息 地址是:/api/user/userAddress/auth/findUserAddressList 请求方式:get\n\nexport var reqAddressInfo = function reqAddressInfo() {\n  return request({\n    url: '/user/userAddress/auth/findUserAddressList',\n    method: 'get'\n  });\n}; // 获取订单交易页信息 地址是:/api/order/auth/trade 请求方式:get\n\nexport var reqOrderInfo = function reqOrderInfo() {\n  return request({\n    url: '/order/auth/trade',\n    method: 'get'\n  });\n}; //提交订单的接口 地址是：/api/order/auth/submitOrder?tradeNo={tradeNo} 请求方式：post\n\nexport var reqSubmitOrder = function reqSubmitOrder(tradeNo, data) {\n  return request({\n    url: \"/order/auth/submitOrder?tradeNo=\".concat(tradeNo),\n    data: data,\n    method: \"post\"\n  });\n}; //获取支付信息 地址是:/api/payment/weixin/createNative/{orderId} 请求方式:get\n\nexport var reqPayInfo = function reqPayInfo(orderId) {\n  return request({\n    url: \"/payment/weixin/createNative/\".concat(orderId),\n    method: 'get'\n  });\n}; // 获取支付订单状态 地址是：/api/payment/weixin/queryPayStatus/{orderId} 请求方式:get\n\nexport var reqPayStatus = function reqPayStatus(orderId) {\n  return request({\n    url: \"/payment/weixin/queryPayStatus/\".concat(orderId),\n    method: \"get\"\n  });\n}; // 获取个人中心的数据 地址是:/api/order/auth/{page}/{limit} 请求方式get\n\nexport var reqMyOrderList = function reqMyOrderList(page, limit) {\n  return request({\n    url: \"/order/auth/\".concat(page, \"/\").concat(limit),\n    method: 'get'\n  });\n};",{"version":3,"sources":["C:/Users/Administrator/WebstormProjects/app/src/api/index.js"],"names":["request","mockRequests","get","reqCategoryList","url","method","reqGetBannerList","reqGetFloorList","reqGetSearchInfo","params","data","reqGoodsInfo","skuId","reqAddOrUpdateShopCart","skuNum","reqCartList","reqDeleteCartById","reqUpdateCheckedById","isChecked","reqGetCode","phone","reqUserRegister","reqUserLogin","reqUserInfo","reqLogout","reqAddressInfo","reqOrderInfo","reqSubmitOrder","tradeNo","reqPayInfo","orderId","reqPayStatus","reqMyOrderList","page","limit"],"mappings":"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","sourcesContent":["// 统一管理项目接口的模块\r\n// 引入二次封装axios\r\n\r\nimport request from \"./request\"\r\n\r\nimport mockRequests from \"./mockAjax\"\r\nimport {get } from \"core-js/core/dict\";\r\n\r\n//API接口统一管理，发送请求（TypeNav）\r\nexport const reqCategoryList = () => request({ url: '/product/getBaseCategoryList', method: 'get' });\r\n\r\n// 获取banner(Home首页轮播图接口)\r\nexport const reqGetBannerList = () => mockRequests({ url: '/banner', method: 'get' });\r\n\r\n// 获取floor的模拟接口数据\r\nexport const reqGetFloorList = () => mockRequests({ url: '/floor', method: 'get' });\r\n\r\n// 获取search搜索模块数据 地址是:/api/list 请求方式:post\r\n// 当前的这个接口给服务器传递的参数params---他至少是一个空对象\r\nexport const reqGetSearchInfo = (params) => request({ url: '/list', method: 'post', data: params })\r\n\r\n//获取产品详情信息的接口 地址是/api/item/{ skuId } 请求方式:get\r\nexport const reqGoodsInfo = (skuId) => request({ url: `/item/${skuId}`, method: 'get' })\r\n\r\n// 将产品添加到购物车中（获取更新某一产品的个数） 地址是/api/cart/addToCart/{ skuId }/{ skuNum } 请求方式：post\r\nexport const reqAddOrUpdateShopCart = (skuId, skuNum) => request({ url: `/cart/addToCart/${skuId}/${skuNum}`, method: 'post' })\r\n\r\n// 获取购物车列表数据接口 地址是：/api/cart/cartList 请求方式:get\r\nexport const reqCartList = () => request({ url: '/cart/cartList', method: 'get' });\r\n\r\n// 删除购物车产品的接口 地址是:/api/cart/deleteCart/{skuId} 请求方式:DELETE\r\nexport const reqDeleteCartById = (skuId) => request({ url: `/cart/deleteCart/${skuId}`, method: 'DELETE' })\r\n\r\n// 切换商品选中状态 地址是：/api/cart/checkCart/{skuID}/{isChecked} 请求方式是：get\r\nexport const reqUpdateCheckedById = (skuId, isChecked) => request({ url: `/cart/checkCart/${skuId}/${isChecked}`, method: 'get' })\r\n\r\n//获取验证码 地址是/api/user/passport/sendCode/{phone} 请求方式:get\r\nexport const reqGetCode = (phone) => request({ url: `/user/passport/sendCode/${phone}`, method: 'get' })\r\n\r\n//注册 地址是：/api/user/passport/register 请求方式是post  phone code password\r\nexport const reqUserRegister = (data) => request({ url: '/user/passport/register', data, method: 'post' })\r\n\r\n//登录 地址是/api/user/passport/login 请求方式post   phone password\r\nexport const reqUserLogin = (data) => request({ url: '/user/passport/login', data, method: 'post' })\r\n\r\n// 获取用户信息【需要带着用户的token向服务器要用户信息】 地址是：/api/user/passport/auth/getUserInfo 请求方式:get\r\nexport const reqUserInfo = () => request({ url: '/user/passport/auth/getUserInfo', method: 'get' })\r\n\r\n// 退出登录 地址是:/api/user/passport/logout 请求方式 get\r\nexport const reqLogout = () => request({ url: '/user/passport/logout', method: 'get' });\r\n\r\n// 获取用户地址信息 地址是:/api/user/userAddress/auth/findUserAddressList 请求方式:get\r\nexport const reqAddressInfo = () => request({ url: '/user/userAddress/auth/findUserAddressList', method: 'get' })\r\n\r\n// 获取订单交易页信息 地址是:/api/order/auth/trade 请求方式:get\r\nexport const reqOrderInfo = () => request({ url: '/order/auth/trade', method: 'get' })\r\n\r\n//提交订单的接口 地址是：/api/order/auth/submitOrder?tradeNo={tradeNo} 请求方式：post\r\nexport const reqSubmitOrder = (tradeNo, data) => request({ url: `/order/auth/submitOrder?tradeNo=${tradeNo}`, data, method: \"post\" })\r\n\r\n//获取支付信息 地址是:/api/payment/weixin/createNative/{orderId} 请求方式:get\r\nexport const reqPayInfo = (orderId) => request({ url: `/payment/weixin/createNative/${orderId}`, method: 'get' })\r\n\r\n// 获取支付订单状态 地址是：/api/payment/weixin/queryPayStatus/{orderId} 请求方式:get\r\nexport const reqPayStatus = (orderId) => request({ url: `/payment/weixin/queryPayStatus/${orderId}`, method: \"get\" })\r\n\r\n// 获取个人中心的数据 地址是:/api/order/auth/{page}/{limit} 请求方式get\r\nexport const reqMyOrderList = (page, limit) => request({ url: `/order/auth/${page}/${limit}`, method: 'get' })"]}]}