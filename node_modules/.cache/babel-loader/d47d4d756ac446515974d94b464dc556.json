{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\ShopCart\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\ShopCart\\index.vue","mtime":1648033242133},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from \"vuex\"; // 引入节流函数throttle\n\nimport throttle from \"lodash/throttle\";\nexport default {\n  name: \"ShopCart\",\n  mounted: function mounted() {\n    this.getData();\n  },\n  methods: {\n    // 获取个人购物车数据\n    getData: function getData() {\n      this.$store.dispatch(\"getCartList\");\n    },\n    // 修改某一产品的个数\n    // 节流：防止用户操作过快\n    handler: throttle( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(type, disNum, cart) {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = type;\n                _context.next = _context.t0 === \"add\" ? 3 : _context.t0 === \"mins\" ? 5 : _context.t0 === \"change\" ? 7 : 8;\n                break;\n\n              case 3:\n                // 带给服务器变化量\n                disNum = 1;\n                return _context.abrupt(\"break\", 8);\n\n              case 5:\n                // 判断产品的个数大于一,才可以传递给服务器-1\n                if (cart.skuNum > 1) disNum = -1; // 产品的个数小于等于1\n                else disNum = 0;\n                return _context.abrupt(\"break\", 8);\n\n              case 7:\n                // 用户输入进来最终量，非法的（带有汉字）,带给服务器数字\n                if (isNaN(disNum) || disNum < 1) {\n                  disNum = 0;\n                } else {\n                  disNum = parseInt(disNum) - cart.skuNum;\n                }\n\n              case 8:\n                _context.prev = 8;\n                _context.next = 11;\n                return this.$store.dispatch(\"addOrUpdateShopCart\", {\n                  skuId: cart.skuId,\n                  skuNum: disNum\n                });\n\n              case 11:\n                // 再一次获取服务器最新的数据进行展示\n                this.getData();\n                _context.next = 16;\n                break;\n\n              case 14:\n                _context.prev = 14;\n                _context.t1 = _context[\"catch\"](8);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[8, 14]]);\n      }));\n\n      return function (_x, _x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }(), 500),\n    // 删除某一个产品\n    deleteCartById: function () {\n      var _deleteCartById = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(cart) {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return this.$store.dispatch(\"deleteCartListBySkuId\", cart.skuId);\n\n              case 3:\n                this.getData();\n                _context2.next = 9;\n                break;\n\n              case 6:\n                _context2.prev = 6;\n                _context2.t0 = _context2[\"catch\"](0);\n                alert(_context2.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 6]]);\n      }));\n\n      function deleteCartById(_x4) {\n        return _deleteCartById.apply(this, arguments);\n      }\n\n      return deleteCartById;\n    }(),\n    // 修改某个产品的勾选状态\n    updateChecked: function () {\n      var _updateChecked = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(cart, event) {\n        var checked;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                checked = event.target.checked ? \"1\" : \"0\";\n                console.log(checked);\n                _context3.next = 5;\n                return this.$store.dispatch(\"updateCheckedById\", {\n                  skuId: cart.skuId,\n                  isChecked: checked\n                });\n\n              case 5:\n                this.getData();\n                _context3.next = 11;\n                break;\n\n              case 8:\n                _context3.prev = 8;\n                _context3.t0 = _context3[\"catch\"](0);\n                // 如果失败了\n                alert(_context3.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 8]]);\n      }));\n\n      function updateChecked(_x5, _x6) {\n        return _updateChecked.apply(this, arguments);\n      }\n\n      return updateChecked;\n    }(),\n    // 删除全部选中的产品\n    deleteAllCheckedCart: function () {\n      var _deleteAllCheckedCart = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                _context4.next = 3;\n                return this.$store.dispatch(\"deleteAllCheckedCart\");\n\n              case 3:\n                // 再次获取购物车列表\n                this.getData();\n                _context4.next = 9;\n                break;\n\n              case 6:\n                _context4.prev = 6;\n                _context4.t0 = _context4[\"catch\"](0);\n                alert(_context4.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 6]]);\n      }));\n\n      function deleteAllCheckedCart() {\n        return _deleteAllCheckedCart.apply(this, arguments);\n      }\n\n      return deleteAllCheckedCart;\n    }(),\n    // 修改全部产品的选中在状态\n    updateAllCartChecked: function () {\n      var _updateAllCartChecked = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(event) {\n        var isChecked;\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.prev = 0;\n                this.getData(); // this.getData();\n\n                isChecked = event.target.checked ? \"1\" : \"0\";\n                console.log(isChecked); //  派发action\n\n                _context5.next = 6;\n                return this.$store.dispatch(\"updateAllCartChecked\", isChecked);\n\n              case 6:\n                // 再次请求列表数据\n                this.getData();\n                _context5.next = 12;\n                break;\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](0);\n                alert(_context5.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[0, 9]]);\n      }));\n\n      function updateAllCartChecked(_x7) {\n        return _updateAllCartChecked.apply(this, arguments);\n      }\n\n      return updateAllCartChecked;\n    }()\n  },\n  computed: _objectSpread(_objectSpread({}, mapGetters([\"cartList\"])), {}, {\n    // 购物车数据\n    cartInfoList: function cartInfoList() {\n      return this.cartList.cartInfoList || [];\n    },\n    // 计算购买产品的总价\n    totoalPrice: function totoalPrice() {\n      var sum = 0;\n      this.cartInfoList.forEach(function (item) {\n        sum += item.skuNum * item.skuPrice;\n      });\n      return sum;\n    },\n    // 全选(判断底部复选框是否勾选。全部产品都选中，才勾选)\n    // every类似于foreach都是遍历数组\n    isAllCheck: function isAllCheck() {\n      return this.cartInfoList.every(function (item) {\n        return item.isChecked == 1;\n      });\n    }\n  })\n};",null]}