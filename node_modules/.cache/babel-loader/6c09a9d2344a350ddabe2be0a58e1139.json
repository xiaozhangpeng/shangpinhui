{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\api\\request.js","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\api\\request.js","mtime":1648094285102},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["//引入axios\nimport axios from 'axios';\nimport nprogress from 'nprogress';\nimport \"nprogress/nprogress.css\"; // 在当前模块引入store\n\nimport store from '@/store'; //创建axios实例\n\nvar request = axios.create({\n  baseURL: \"/api\",\n  timeout: 5000\n}); //请求拦截器\n\nrequest.interceptors.request.use(function (config) {\n  if (store.state.detail.uuid_token) {\n    // 请求头添加一个字段（userTempId）:一定是和后台老师商量好的\n    config.headers.userTempId = store.state.detail.uuid_token;\n  } // 需要携带token带给服务器\n\n\n  if (store.state.user.token) {\n    config.headers.token = store.state.user.token;\n  }\n\n  nprogress.start();\n  return config;\n}); // 响应拦截器\n\nrequest.interceptors.response.use(function (res) {\n  nprogress.done();\n  return res.data;\n}, function (error) {\n  //服务器响应失败的回调函数\n  alert(error.message);\n}); //对外暴露request，导出\n\nexport default request;",{"version":3,"sources":["C:/Users/Administrator/Desktop/上线项目/app/src/api/request.js"],"names":["axios","nprogress","store","request","create","baseURL","timeout","interceptors","use","config","state","detail","uuid_token","headers","userTempId","user","token","start","response","res","done","data","error","alert","message"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAO,yBAAP,C,CAEA;;AACA,OAAOC,KAAP,MAAkB,SAAlB,C,CAEA;;AACA,IAAMC,OAAO,GAAGH,KAAK,CAACI,MAAN,CAAa;AAEzBC,EAAAA,OAAO,EAAE,MAFgB;AAGzBC,EAAAA,OAAO,EAAE;AAHgB,CAAb,CAAhB,C,CAMA;;AACAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAACC,MAAD,EAAY;AACzC,MAAIP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,UAAvB,EAAmC;AAC/B;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAeC,UAAf,GAA4BZ,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,UAA/C;AACH,GAJwC,CAMzC;;;AACA,MAAIV,KAAK,CAACQ,KAAN,CAAYK,IAAZ,CAAiBC,KAArB,EAA4B;AACxBP,IAAAA,MAAM,CAACI,OAAP,CAAeG,KAAf,GAAuBd,KAAK,CAACQ,KAAN,CAAYK,IAAZ,CAAiBC,KAAxC;AACH;;AAGDf,EAAAA,SAAS,CAACgB,KAAV;AACA,SAAOR,MAAP;AAEH,CAfD,E,CAgBA;;AACAN,OAAO,CAACI,YAAR,CAAqBW,QAArB,CAA8BV,GAA9B,CAAkC,UAACW,GAAD,EAAS;AACvClB,EAAAA,SAAS,CAACmB,IAAV;AACA,SAAOD,GAAG,CAACE,IAAX;AAEH,CAJD,EAIG,UAACC,KAAD,EAAW;AACV;AACAC,EAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AACH,CAPD,E,CASA;;AACA,eAAerB,OAAf","sourcesContent":["//引入axios\r\nimport axios from 'axios';\r\nimport nprogress from 'nprogress';\r\nimport \"nprogress/nprogress.css\"\r\n\r\n// 在当前模块引入store\r\nimport store from '@/store'\r\n\r\n//创建axios实例\r\nconst request = axios.create({\r\n\r\n    baseURL: \"/api\",\r\n    timeout: 5000\r\n});\r\n\r\n//请求拦截器\r\nrequest.interceptors.request.use((config) => {\r\n    if (store.state.detail.uuid_token) {\r\n        // 请求头添加一个字段（userTempId）:一定是和后台老师商量好的\r\n        config.headers.userTempId = store.state.detail.uuid_token\r\n    }\r\n\r\n    // 需要携带token带给服务器\r\n    if (store.state.user.token) {\r\n        config.headers.token = store.state.user.token;\r\n    }\r\n\r\n\r\n    nprogress.start();\r\n    return config;\r\n\r\n});\r\n// 响应拦截器\r\nrequest.interceptors.response.use((res) => {\r\n    nprogress.done();\r\n    return res.data\r\n\r\n}, (error) => {\r\n    //服务器响应失败的回调函数\r\n    alert(error.message)\r\n});\r\n\r\n//对外暴露request，导出\r\nexport default request;"]}]}