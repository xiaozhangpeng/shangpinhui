{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\detail\\index.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\detail\\index.js","mtime":1647763074664},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { reqAddOrUpdateShopCart, reqGoodsInfo } from \"@/api\"; // 封装游客身份模块uuid--->生成一个随机字符串（不能再变了）\n\nimport { getUUID } from \"@/utils/uuid_token\";\nvar state = {\n  goodInfo: {},\n  // 游客临时身份\n  uuid_token: getUUID()\n};\nvar mutations = {\n  GETGOODINFO: function GETGOODINFO(state, goodInfo) {\n    state.goodInfo = goodInfo;\n  }\n};\nvar actions = {\n  // 获取产品信息的action\n  getGoodInfo: function () {\n    var _getGoodInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, skuId) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGoodsInfo(skuId);\n\n            case 3:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit('GETGOODINFO', result.data);\n              }\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getGoodInfo(_x, _x2) {\n      return _getGoodInfo.apply(this, arguments);\n    }\n\n    return getGoodInfo;\n  }(),\n  // 将产品添加到购物车中\n  addOrUpdateShopCart: function () {\n    var _addOrUpdateShopCart = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, _ref3) {\n      var commit, skuId, skuNum, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              skuId = _ref3.skuId, skuNum = _ref3.skuNum;\n              _context2.next = 4;\n              return reqAddOrUpdateShopCart(skuId, skuNum);\n\n            case 4:\n              result = _context2.sent;\n              console.log(result); // 代表加入购物车成功\n\n              if (!(result.code == 200)) {\n                _context2.next = 10;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function addOrUpdateShopCart(_x3, _x4) {\n      return _addOrUpdateShopCart.apply(this, arguments);\n    }\n\n    return addOrUpdateShopCart;\n  }()\n}; // 简化数据\n\nvar getters = {\n  // 比如:state.goodInfo初始状态为空对象，空对象categoryView属性值为undefined\n  // 当前计算出的categoryView属性值至少是一个空对象，假的报错不会有哦\n  // 简化路径导航的数据\n  categoryView: function categoryView(state) {\n    return state.goodInfo.categoryView || {};\n  },\n  // 简化产品信息的数据\n  skuInfo: function skuInfo(state) {\n    return state.goodInfo.skuInfo || {};\n  },\n  // 简化售卖属性的数据\n  spuSaleAttrList: function spuSaleAttrList(state) {\n    return state.goodInfo.spuSaleAttrList || [];\n  }\n}; // 对外暴露\n\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",null]}