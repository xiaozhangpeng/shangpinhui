{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\search\\index.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\search\\index.js","mtime":1647501072250},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// search仓库\n// 引入接口\nimport { reqGetSearchInfo } from \"@/api\"; // 创建对象\n\nvar state = {\n  // 返回的数据是对象，需要将格式设置为对象\n  searchList: {}\n};\nvar mutations = {\n  GETSEARCHLIST: function GETSEARCHLIST(state, searchList) {\n    state.searchList = searchList;\n  }\n};\nvar actions = {\n  // 获取search模块数据\n  getSearchList: function () {\n    var _getSearchList = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {\n      var commit,\n          params,\n          result,\n          _args = arguments;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              params = _args.length > 1 && _args[1] !== undefined ? _args[1] : {};\n              _context.next = 4;\n              return reqGetSearchInfo(params);\n\n            case 4:\n              result = _context.sent;\n\n              if (result.code == 200) {\n                commit(\"GETSEARCHLIST\", result.data);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getSearchList(_x) {\n      return _getSearchList.apply(this, arguments);\n    }\n\n    return getSearchList;\n  }()\n}; // 计算属性getters\n// 项目当中getters的主要作用是：简化仓库中的数据（简化数据而生）\n// getters可以把我们将来在组件当中需要用到的数据简化一下（将来组件中获取数据就方便了）\n\nvar getters = {\n  // 需要注意的是，当前形参的state，并非大仓库中的那个state，而是本仓库中的\n  goodsList: function goodsList(state) {\n    // 这样书写是有问题的,修改后是后面一个=>||[]\n    // 如果服务器的数据回来了，那state.searchList.goodsList是一个数组\n    // 假如网络不给力或者没有网络，state.searchList.goodsList返回的是undefined\n    return state.searchList.goodsList || [];\n  },\n  attrsList: function attrsList(state) {\n    return state.searchList.attrsList;\n  },\n  trademarkList: function trademarkList(state) {\n    return state.searchList.trademarkList;\n  }\n}; // 对外暴露Store类的一个实例\n\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",null]}