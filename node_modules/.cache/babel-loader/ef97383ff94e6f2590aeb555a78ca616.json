{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\user\\index.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\user\\index.js","mtime":1648099642360},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// 用户模块（登录与注册）\nimport { reqGetCode, reqUserLogin, reqUserRegister, reqUserInfo, reqLogout } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nvar state = {\n  code: '',\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  //清楚本地数据\n  CLEAR: function CLEAR(state) {\n    // 把仓库中相关用户信息清空\n    state.token = '';\n    state.userInfo = {}; //本地存储数据清空\n\n    removeToken();\n  }\n};\nvar actions = {\n  // 获取验证码\n  getCode: function () {\n    var _getCode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, phone) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              _context.next = 9;\n              break;\n\n            case 8:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCode(_x, _x2) {\n      return _getCode.apply(this, arguments);\n    }\n\n    return getCode;\n  }(),\n  // 注册\n  UserRegister: function () {\n    var _UserRegister = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, user) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function UserRegister(_x3, _x4) {\n      return _UserRegister.apply(this, arguments);\n    }\n\n    return UserRegister;\n  }(),\n  // 登录业务[token:令牌]\n  UserLogin: function () {\n    var _UserLogin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, data) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token); // 持久化存储token\n\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function UserLogin(_x5, _x6) {\n      return _UserLogin.apply(this, arguments);\n    }\n\n    return UserLogin;\n  }(),\n  // 获取用户信息\n  getUserInfo: function () {\n    var _getUserInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref4) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 8;\n                break;\n              }\n\n              // 提交mutation:只有mutation才可以修改state\n              commit('GETUSERINFO', result.data);\n              _context4.next = 9;\n              break;\n\n            case 8:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getUserInfo(_x7) {\n      return _getUserInfo.apply(this, arguments);\n    }\n\n    return getUserInfo;\n  }(),\n  //退出登录\n  userLogout: function () {\n    var _userLogout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref5) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogout();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 9;\n                break;\n              }\n\n              // action里面不能操作state，需要提交mutations修改state\n              commit('CLEAR');\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function userLogout(_x8) {\n      return _userLogout.apply(this, arguments);\n    }\n\n    return userLogout;\n  }()\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",null]}