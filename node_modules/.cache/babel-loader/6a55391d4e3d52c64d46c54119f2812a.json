{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\components\\Header\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\components\\Header\\Header.vue","mtime":1648191276013},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1647341552492},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Header\",\n  data: function data() {\n    return {\n      keyword: \"\"\n    };\n  },\n  computed: {\n    //用户名（出错原因，仓库中的state字母写错）\n    userName: function userName() {\n      return this.$store.state.user.userInfo.name;\n    }\n  },\n  methods: {\n    Searchs: function Searchs() {\n      //vue-router的最新版本引入了最新技术，当调用push会返回一个Promise对象\n      // let result=  this.$router.push({name: 'Search', params: {keyword: this.keyword}, query: {k: this.keyword.toUpperCase()}},()=>{},()=>{});\n      // this.$router.push({path:'/search'})\n      // this.$router.push({name: 'Search',\n      //  params: {keyword: this.keyword||undefined},\n      //  query: {big: this.keyword.toUpperCase()}},()=>{},()=>{\n      // //  捕获当前的错误||获取当前的$router属性\n      // //  console.log(this.$router)\n      // // console.log(error);\n      // });\n      // console.log(result);\n      if (this.$route.query) {\n        // 如果有query参数，同样也稍带过去\n        // 如果传递的params参数是空字符串时，需要使用Undefined\n        var location = {\n          name: \"Search\",\n          params: {\n            keyword: this.keyword || undefined\n          }\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n    // 退出登录\n    logout: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$store.dispatch(\"userLogout\");\n\n              case 3:\n                this.$router.push(\"/home\");\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 通过全局事件总线$bus清楚关键字\n    this.$bus.$on(\"clear\", function () {\n      _this.keyword = \"\";\n    });\n  }\n};",null]}