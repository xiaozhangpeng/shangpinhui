{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\components\\Header\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\components\\Header\\Header.vue","mtime":1648191276013},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\babel.config.js","mtime":1648180147605},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/Desktop/\\u4E0A\\u7EBF\\u9879\\u76EE/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es6.function.name\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: \"Header\",\n  data: function data() {\n    return {\n      keyword: \"\"\n    };\n  },\n  computed: {\n    //用户名（出错原因，仓库中的state字母写错）\n    userName: function userName() {\n      return this.$store.state.user.userInfo.name;\n    }\n  },\n  methods: {\n    Searchs: function Searchs() {\n      //vue-router的最新版本引入了最新技术，当调用push会返回一个Promise对象\n      // let result=  this.$router.push({name: 'Search', params: {keyword: this.keyword}, query: {k: this.keyword.toUpperCase()}},()=>{},()=>{});\n      // this.$router.push({path:'/search'})\n      // this.$router.push({name: 'Search',\n      //  params: {keyword: this.keyword||undefined},\n      //  query: {big: this.keyword.toUpperCase()}},()=>{},()=>{\n      // //  捕获当前的错误||获取当前的$router属性\n      // //  console.log(this.$router)\n      // // console.log(error);\n      // });\n      // console.log(result);\n      if (this.$route.query) {\n        // 如果有query参数，同样也稍带过去\n        // 如果传递的params参数是空字符串时，需要使用Undefined\n        var location = {\n          name: \"Search\",\n          params: {\n            keyword: this.keyword || undefined\n          }\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n    // 退出登录\n    logout: function () {\n      var _logout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return this.$store.dispatch(\"userLogout\");\n\n              case 3:\n                this.$router.push(\"/home\");\n                _context.next = 9;\n                break;\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                alert(_context.t0.message);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 6]]);\n      }));\n\n      function logout() {\n        return _logout.apply(this, arguments);\n      }\n\n      return logout;\n    }()\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    // 通过全局事件总线$bus清楚关键字\n    this.$bus.$on(\"clear\", function () {\n      _this.keyword = \"\";\n    });\n  }\n};",{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AACAA,gBADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AADA;AAGA,GANA;AAOAC;AACA;AACAC,YAFA,sBAEA;AACA;AACA;AAJA,GAPA;AAaAC;AACAC;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACAN,wBADA;AAEAO;AAAAL;AAAA;AAFA;AAIAM;AACA;AACA;AACA,KAzBA;AA0BA;AACAC,UA3BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBA8BA,kCA9BA;;AAAA;AA+BA;AA/BA;AAAA;;AAAA;AAAA;AAAA;AAiCAC;;AAjCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GAbA;AAkDAC,SAlDA,qBAkDA;AAAA;;AACA;AACA;AACA;AACA,KAFA;AAGA;AAvDA","names":["name","data","keyword","computed","userName","methods","Searchs","params","location","logout","alert","mounted"],"sourceRoot":"src/components/Header","sources":["Header.vue"],"sourcesContent":["<template>\n  <!-- 头部 -->\n  <div class=\"header\">\n    <!-- 头部的第一行 -->\n    <div class=\"top\">\n      <div class=\"container\">\n        <div class=\"loginList\">\n          <p>尚品汇欢迎您！</p>\n          <!-- 没有用户名：未登录 -->\n          <p v-if=\"!userName\">\n            <span>请</span>\n            <router-link to=\"/login\">登录</router-link>\n            <router-link class=\"register\" to=\"/register\">免费注册</router-link>\n          </p>\n          <!-- 有用户名，登录了 -->\n          <p v-else>\n            <a>{{ userName }}</a>\n            <a class=\"register\" @click=\"logout()\">退出登录</a>\n          </p>\n        </div>\n        <div class=\"typeList\">\n          <router-link to=\"/center\">我的订单</router-link>\n          <router-link to=\"/shopcart\">我的购物车</router-link>\n          <a href=\"###\">我的尚品汇</a>\n          <a href=\"###\">尚品汇会员</a>\n          <a href=\"###\">企业采购</a>\n          <a href=\"###\">关注尚品汇</a>\n          <a href=\"###\">合作招商</a>\n          <a href=\"###\">商家后台</a>\n        </div>\n      </div>\n    </div>\n    <!--头部第二行 搜索区域-->\n    <div class=\"bottom\">\n      <h1 class=\"logoArea\">\n        <a class=\"logo\" href=\"/\" target=\"_blank\" title=\"尚品汇\">\n          <img alt=\"\" src=\".././images/logo.png\" />\n        </a>\n      </h1>\n      <div class=\"searchArea\">\n        <form action=\"###\" class=\"searchForm\">\n          <input\n            class=\"input-error input-xxlarge\"\n            id=\"autocomplete\"\n            type=\"text\"\n            v-model=\"keyword\"\n          />\n          <button\n            @click=\"Searchs()\"\n            class=\"sui-btn btn-xlarge btn-danger\"\n            type=\"button\"\n          >\n            搜索\n          </button>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Header\",\n  data() {\n    return {\n      keyword: \"\",\n    };\n  },\n  computed: {\n    //用户名（出错原因，仓库中的state字母写错）\n    userName() {\n      return this.$store.state.user.userInfo.name;\n    },\n  },\n  methods: {\n    Searchs: function () {\n      //vue-router的最新版本引入了最新技术，当调用push会返回一个Promise对象\n      // let result=  this.$router.push({name: 'Search', params: {keyword: this.keyword}, query: {k: this.keyword.toUpperCase()}},()=>{},()=>{});\n      // this.$router.push({path:'/search'})\n      // this.$router.push({name: 'Search',\n      //  params: {keyword: this.keyword||undefined},\n      //  query: {big: this.keyword.toUpperCase()}},()=>{},()=>{\n\n      // //  捕获当前的错误||获取当前的$router属性\n      // //  console.log(this.$router)\n      // // console.log(error);\n      // });\n      // console.log(result);\n\n      if (this.$route.query) {\n        // 如果有query参数，同样也稍带过去\n        // 如果传递的params参数是空字符串时，需要使用Undefined\n        let location = {\n          name: \"Search\",\n          params: { keyword: this.keyword || undefined },\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n    // 退出登录\n    async logout() {\n      // 退出登录需要做的事情（发请求通知服务器推出登录并且清除项目当中的数据userInfo）\n      try {\n        await this.$store.dispatch(\"userLogout\");\n        this.$router.push(\"/home\");\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n  },\n  mounted() {\n    // 通过全局事件总线$bus清楚关键字\n    this.$bus.$on(\"clear\", () => {\n      this.keyword = \"\";\n    });\n  },\n};\n</script>\n\n<style lang=\"less\">\n.header {\n  & > .top {\n    background-color: #eaeaea;\n    height: 30px;\n    line-height: 30px;\n\n    .container {\n      width: 1200px;\n      margin: 0 auto;\n      overflow: hidden;\n\n      .loginList {\n        float: left;\n\n        p {\n          float: left;\n          margin-right: 10px;\n\n          .register {\n            border-left: 1px solid #b3aeae;\n            padding: 0 5px;\n            margin-left: 5px;\n          }\n        }\n      }\n\n      .typeList {\n        float: right;\n\n        a {\n          padding: 0 10px;\n\n          & + a {\n            border-left: 1px solid #b3aeae;\n          }\n        }\n      }\n    }\n  }\n\n  & > .bottom {\n    width: 1200px;\n    margin: 0 auto;\n    overflow: hidden;\n\n    .logoArea {\n      float: left;\n\n      .logo {\n        img {\n          width: 175px;\n          margin: 25px 45px;\n        }\n      }\n    }\n\n    .searchArea {\n      float: right;\n      margin-top: 35px;\n\n      .searchForm {\n        overflow: hidden;\n\n        input {\n          box-sizing: border-box;\n          width: 490px;\n          height: 32px;\n          padding: 0px 4px;\n          border: 2px solid #ea4a36;\n          float: left;\n\n          &:focus {\n            outline: none;\n          }\n        }\n\n        button {\n          height: 32px;\n          width: 68px;\n          background-color: #ea4a36;\n          border: none;\n          color: #fff;\n          float: left;\n          cursor: pointer;\n\n          &:focus {\n            outline: none;\n          }\n        }\n      }\n    }\n  }\n}\n</style>\n"]}]}