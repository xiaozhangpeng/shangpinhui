{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\user\\index.js","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\store\\user\\index.js","mtime":1648099642360},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\babel.config.js","mtime":1647243068386},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"C:/Users/Administrator/WebstormProjects/app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n// 用户模块（登录与注册）\nimport { reqGetCode, reqUserLogin, reqUserRegister, reqUserInfo, reqLogout } from \"@/api\";\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\nvar state = {\n  code: '',\n  token: getToken(),\n  userInfo: {}\n};\nvar mutations = {\n  GETCODE: function GETCODE(state, code) {\n    state.code = code;\n  },\n  USERLOGIN: function USERLOGIN(state, token) {\n    state.token = token;\n  },\n  GETUSERINFO: function GETUSERINFO(state, userInfo) {\n    state.userInfo = userInfo;\n  },\n  //清楚本地数据\n  CLEAR: function CLEAR(state) {\n    // 把仓库中相关用户信息清空\n    state.token = '';\n    state.userInfo = {}; //本地存储数据清空\n\n    removeToken();\n  }\n};\nvar actions = {\n  // 获取验证码\n  getCode: function () {\n    var _getCode = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref, phone) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              _context.next = 3;\n              return reqGetCode(phone);\n\n            case 3:\n              result = _context.sent;\n\n              if (!(result.code == 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              commit('GETCODE', result.data);\n              _context.next = 9;\n              break;\n\n            case 8:\n              return _context.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getCode(_x, _x2) {\n      return _getCode.apply(this, arguments);\n    }\n\n    return getCode;\n  }(),\n  // 注册\n  UserRegister: function () {\n    var _UserRegister = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(_ref2, user) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              commit = _ref2.commit;\n              _context2.next = 3;\n              return reqUserRegister(user);\n\n            case 3:\n              result = _context2.sent;\n\n              if (!(result.code == 200)) {\n                _context2.next = 8;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", 'ok');\n\n            case 8:\n              return _context2.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    function UserRegister(_x3, _x4) {\n      return _UserRegister.apply(this, arguments);\n    }\n\n    return UserRegister;\n  }(),\n  // 登录业务[token:令牌]\n  UserLogin: function () {\n    var _UserLogin = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(_ref3, data) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              commit = _ref3.commit;\n              _context3.next = 3;\n              return reqUserLogin(data);\n\n            case 3:\n              result = _context3.sent;\n\n              if (!(result.code == 200)) {\n                _context3.next = 10;\n                break;\n              }\n\n              commit('USERLOGIN', result.data.token); // 持久化存储token\n\n              setToken(result.data.token);\n              return _context3.abrupt(\"return\", 'ok');\n\n            case 10:\n              return _context3.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    function UserLogin(_x5, _x6) {\n      return _UserLogin.apply(this, arguments);\n    }\n\n    return UserLogin;\n  }(),\n  // 获取用户信息\n  getUserInfo: function () {\n    var _getUserInfo = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(_ref4) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              commit = _ref4.commit;\n              _context4.next = 3;\n              return reqUserInfo();\n\n            case 3:\n              result = _context4.sent;\n\n              if (!(result.code == 200)) {\n                _context4.next = 8;\n                break;\n              }\n\n              // 提交mutation:只有mutation才可以修改state\n              commit('GETUSERINFO', result.data);\n              _context4.next = 9;\n              break;\n\n            case 8:\n              return _context4.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    function getUserInfo(_x7) {\n      return _getUserInfo.apply(this, arguments);\n    }\n\n    return getUserInfo;\n  }(),\n  //退出登录\n  userLogout: function () {\n    var _userLogout = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(_ref5) {\n      var commit, result;\n      return regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              commit = _ref5.commit;\n              _context5.next = 3;\n              return reqLogout();\n\n            case 3:\n              result = _context5.sent;\n\n              if (!(result.code == 200)) {\n                _context5.next = 9;\n                break;\n              }\n\n              // action里面不能操作state，需要提交mutations修改state\n              commit('CLEAR');\n              return _context5.abrupt(\"return\", 'ok');\n\n            case 9:\n              return _context5.abrupt(\"return\", Promise.reject(new Error('faile')));\n\n            case 10:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    function userLogout(_x8) {\n      return _userLogout.apply(this, arguments);\n    }\n\n    return userLogout;\n  }()\n};\nvar getters = {};\nexport default {\n  state: state,\n  mutations: mutations,\n  actions: actions,\n  getters: getters\n};",{"version":3,"sources":["C:/Users/Administrator/WebstormProjects/app/src/store/user/index.js"],"names":["reqGetCode","reqUserLogin","reqUserRegister","reqUserInfo","reqLogout","setToken","getToken","removeToken","state","code","token","userInfo","mutations","GETCODE","USERLOGIN","GETUSERINFO","CLEAR","actions","getCode","phone","commit","result","data","Promise","reject","Error","UserRegister","user","UserLogin","getUserInfo","userLogout","getters"],"mappings":"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","sourcesContent":["// 用户模块（登录与注册）\r\nimport { reqGetCode, reqUserLogin, reqUserRegister, reqUserInfo, reqLogout } from \"@/api\"\r\nimport { setToken, getToken, removeToken } from \"@/utils/token\";\r\n\r\nconst state = {\r\n    code: '',\r\n    token: getToken(),\r\n    userInfo: {}\r\n\r\n}\r\nconst mutations = {\r\n    GETCODE(state, code) {\r\n        state.code = code;\r\n    },\r\n    USERLOGIN(state, token) {\r\n        state.token = token;\r\n    },\r\n    GETUSERINFO(state, userInfo) {\r\n        state.userInfo = userInfo;\r\n    },\r\n    //清楚本地数据\r\n    CLEAR(state) {\r\n        // 把仓库中相关用户信息清空\r\n        state.token = '';\r\n        state.userInfo = {};\r\n        //本地存储数据清空\r\n        removeToken()\r\n\r\n    }\r\n}\r\nconst actions = {\r\n    // 获取验证码\r\n    async getCode({ commit }, phone) {\r\n        // 获取验证码的这个接口，把验证码返回，但是正常情况下，后台是把验证码发给用户手机上的【省钱】\r\n        let result = await reqGetCode(phone);\r\n        // console.log(result);\r\n        if (result.code == 200) {\r\n            commit('GETCODE', result.data)\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n    },\r\n    // 注册\r\n    async UserRegister({ commit }, user) {\r\n        let result = await reqUserRegister(user);\r\n        if (result.code == 200) {\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n\r\n    },\r\n    // 登录业务[token:令牌]\r\n    async UserLogin({ commit }, data) {\r\n        let result = await reqUserLogin(data);\r\n        // console.log(result);\r\n        //服务器下发token,用户唯一标识符（uuid）\r\n        // 将来经常通过token找服务器要用户信息进行展示\r\n        if (result.code == 200) {\r\n            commit('USERLOGIN', result.data.token)\r\n                // 持久化存储token\r\n            setToken(result.data.token);\r\n            return 'ok';\r\n        } else\r\n            return Promise.reject(new Error('faile'))\r\n\r\n    },\r\n\r\n    // 获取用户信息\r\n    async getUserInfo({ commit }) {\r\n        let result = await reqUserInfo();\r\n        // console.log(result);\r\n        if (result.code == 200) {\r\n            // 提交mutation:只有mutation才可以修改state\r\n            commit('GETUSERINFO', result.data);\r\n\r\n        } else {\r\n            return Promise.reject(new Error('faile'))\r\n        }\r\n\r\n    },\r\n\r\n    //退出登录\r\n    async userLogout({ commit }) {\r\n        // 只是向服务器发送一次请求，通知服务器清楚token\r\n        let result = await reqLogout()\r\n        if (result.code == 200) {\r\n            // action里面不能操作state，需要提交mutations修改state\r\n            commit('CLEAR')\r\n            return 'ok'\r\n        } else {\r\n            return Promise.reject(new Error('faile'));\r\n        }\r\n\r\n    }\r\n\r\n}\r\nconst getters = {\r\n\r\n\r\n}\r\n\r\nexport default {\r\n    state,\r\n    mutations,\r\n    actions,\r\n    getters\r\n}"]}]}