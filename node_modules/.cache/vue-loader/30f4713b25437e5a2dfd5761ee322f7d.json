{"remainingRequest":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\components\\Carousel\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\src\\components\\Carousel\\index.vue","mtime":1647503422189},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\Desktop\\上线项目\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// 引入swiper\r\nimport Swiper from \"swiper\";\r\nexport default {\r\n  name: \"Carousel\",\r\n  props: [\"list\"],\r\n  \r\n  watch: {\r\n    list: {\r\n      //   立即监听：不管数据有没有变化，我上来立即监听一次\r\n      immediate: true,\r\n      handler(newValue, oldValue) {\r\n        this.$nextTick(() => {\r\n          var mySwiper = new Swiper(this.$refs.cur, {\r\n            //   direction: \"vertical\", // 垂直切换选项\r\n            loop: true, // 循环模式选项\r\n\r\n            // 如果需要分页器\r\n            pagination: {\r\n              el: \".swiper-pagination\",\r\n              clickable: true,\r\n            },\r\n\r\n            // 如果需要前进后退按钮\r\n            navigation: {\r\n              nextEl: \".swiper-button-next\",\r\n              prevEl: \".swiper-button-prev\",\r\n            },\r\n\r\n            // 如果需要滚动条\r\n            scrollbar: {\r\n              el: \".swiper-scrollbar\",\r\n            },\r\n          });\r\n        });\r\n      },\r\n    },\r\n  },\r\n};\r\n",{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Carousel","sourcesContent":["<template>\r\n  <div class=\"swiper-container\" ref=\"cur\">\r\n    <div class=\"swiper-wrapper\">\r\n      <div\r\n        class=\"swiper-slide\"\r\n        v-for=\"(carousel, index) in list\"\r\n        :key=\"carousel.id\"\r\n      >\r\n        <img :src=\"carousel.imgUrl\" />\r\n      </div>\r\n    </div>\r\n    <!-- 如果需要分页器 -->\r\n    <div class=\"swiper-pagination\"></div>\r\n\r\n    <!-- 如果需要导航按钮 -->\r\n    <div class=\"swiper-button-prev\"></div>\r\n    <div class=\"swiper-button-next\"></div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// 引入swiper\r\nimport Swiper from \"swiper\";\r\nexport default {\r\n  name: \"Carousel\",\r\n  props: [\"list\"],\r\n  \r\n  watch: {\r\n    list: {\r\n      //   立即监听：不管数据有没有变化，我上来立即监听一次\r\n      immediate: true,\r\n      handler(newValue, oldValue) {\r\n        this.$nextTick(() => {\r\n          var mySwiper = new Swiper(this.$refs.cur, {\r\n            //   direction: \"vertical\", // 垂直切换选项\r\n            loop: true, // 循环模式选项\r\n\r\n            // 如果需要分页器\r\n            pagination: {\r\n              el: \".swiper-pagination\",\r\n              clickable: true,\r\n            },\r\n\r\n            // 如果需要前进后退按钮\r\n            navigation: {\r\n              nextEl: \".swiper-button-next\",\r\n              prevEl: \".swiper-button-prev\",\r\n            },\r\n\r\n            // 如果需要滚动条\r\n            scrollbar: {\r\n              el: \".swiper-scrollbar\",\r\n            },\r\n          });\r\n        });\r\n      },\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n</style>"]}]}