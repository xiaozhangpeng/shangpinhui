{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Home\\ListContainer\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Home\\ListContainer\\index.vue","mtime":1647846096096},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapState } from \"vuex\";\r\n\r\n// 引入swiper\r\nimport Swiper from \"swiper\";\r\n\r\nexport default {\r\n  name: \"\",\r\n  mounted() {\r\n    // 派发action：通过Vuex发起ajax异步请求，将数据存储在仓库中\r\n    this.$store.dispatch(\"getBannerList\");\r\n    // 由于是异步请求，所以new swiper实例不能在mounted()内，\r\n    // 还是那句话，实例之前必须要有完整的结构\r\n\r\n    // 轮播图swiper实例的第一种解决办法（不完善，有bug）:通过设置计时器\r\n    // setTimeout(() => {\r\n    //   var mySwiper = new Swiper(\".swiper-container\", {\r\n    //     // direction: \"vertical\", // 垂直切换选项\r\n    //     loop: true, // 循环模式选项\r\n\r\n    //     // 如果需要分页器\r\n    //     pagination: {\r\n    //       el: \".swiper-pagination\",\r\n\r\n    //     //   设置分页器允许点击跳转图片\r\n    //       clickable:true\r\n    //     },\r\n\r\n    //     // 如果需要前进后退按钮\r\n    //     navigation: {\r\n    //       nextEl: \".swiper-button-next\",\r\n    //       prevEl: \".swiper-button-prev\",\r\n    //     },\r\n\r\n    //     // 如果需要滚动条\r\n    //     scrollbar: {\r\n    //       el: \".swiper-scrollbar\",\r\n    //     },\r\n    //   });\r\n    // },2000);\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      bannerList: (state) => state.home.bannerList,\r\n    }),\r\n  },\r\n \r\n};\r\n",null]}