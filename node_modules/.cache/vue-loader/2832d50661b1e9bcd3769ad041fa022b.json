{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Pay\\index.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\pages\\Pay\\index.vue","mtime":1648185311210},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n// 引入QRCode--二维码解析\r\nimport QRCode from \"qrcode\";\r\nimport { done } from 'nprogress';\r\nexport default {\r\n  name: \"Pay\",\r\n  data() {\r\n    return {\r\n      payInfo: {},\r\n      // 定时器\r\n      timer: null,\r\n      code:''\r\n    };\r\n  },\r\n  computed: {\r\n    orderId() {\r\n      return this.$route.query.orderId;\r\n    },\r\n  },\r\n  // 工作的时候尽量别再生命周期函数中async|await\r\n  mounted() {\r\n    this.getPayInfo();\r\n  },\r\n  methods: {\r\n    // 在支付页面获取用户支付信息\r\n    async getPayInfo() {\r\n      let result = await this.$API.reqPayInfo(this.orderId);\r\n      console.log(result);\r\n      if (result.code == 200) {\r\n        this.payInfo = result.data;\r\n      }\r\n    },\r\n    //element-ui中的弹出事件\r\n    async open() {\r\n      // 生成二维码\r\n      let url = await QRCode.toDataURL(this.payInfo.codeUrl);\r\n      // 弹出对话框(注意img中的/要空一格)\r\n      this.$alert(`<img src=${url} />`, \"请你微信支付\", {\r\n        //  是否将message属性作为HTML片段处理\r\n        dangerouslyUseHTMLString: true,\r\n        // 中间布局\r\n        center: true,\r\n        // 是否显示取消按钮\r\n        showCancelButton: true,\r\n        // 取消按钮的文本内容\r\n        cancelButtonText: \"支付遇见问题\",  \r\n        // 确定按钮的文本内容\r\n        confirmButtonText: \"已支付成功\",\r\n        // 右上角的叉子没了\r\n        showClose: false,\r\n        // 关闭弹出框之前的配置值\r\n        beforeClose:(type,instance,done)=>\r\n        {\r\n          // type:区分取消|确定按钮\r\n          // instance:当前组件实例\r\n          // done:关闭弹出框的方法\r\n          if(type=='cancel')\r\n          {\r\n            alert('请联系管理员处理')\r\n            // 清楚定时器\r\n            clearInterval(this.timer);\r\n            this.timer=null;\r\n            // 关闭弹出框\r\n            done();\r\n          }\r\n          else{\r\n            // 判断是否真的支付了\r\n            // 开发人员:为了自己方便,这里判断先不要了,直接判断\r\n            // if(code==200)\r\n            // {\r\n              clearInterval(this.timer);\r\n              this.timer=null;\r\n              done();\r\n              this.$router.push('/paysuccess');\r\n            // }\r\n\r\n          }\r\n        }\r\n      });\r\n      // 你需要知道支付成功|失败\r\n      // 支付成功,路由的跳转,如果支付失败,提示信息\r\n      //定时器没有,开启一个新的定时器\r\n      if (!this.timer) {\r\n        this.timer=setInterval(async()=>{\r\n          // 发请求获取用户支付状态\r\n        let result=  await this.$API.reqPayStatus(this.orderId);\r\n        console.log(result);\r\n        // 支付成功后跳转\r\n        if(result.code==200)\r\n        {\r\n            // 第一步:清楚定时器\r\n            clearInterval(this.timer);\r\n            this.timer=null;\r\n            // 第二部:保存支付成功后的code\r\n            this.code=result.code;\r\n            // 第三步:关闭弹出框\r\n            this.$msgbox.close();\r\n            // 第四步:跳转到下一个路由(支付成功)\r\n            this.$router.push('/paysuccess');\r\n        }\r\n        },1000)\r\n      }\r\n    },\r\n  },\r\n};\r\n",null]}