{"remainingRequest":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Administrator\\WebstormProjects\\app\\src\\components\\Header\\Header.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\src\\components\\Header\\Header.vue","mtime":1648191276013},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\babel-loader\\lib\\index.js","mtime":1647341553791},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1647341553526},{"path":"C:\\Users\\Administrator\\WebstormProjects\\app\\node_modules\\vue-loader\\lib\\index.js","mtime":1647341949719}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"Header\",\n  data() {\n    return {\n      keyword: \"\",\n    };\n  },\n  computed: {\n    //用户名（出错原因，仓库中的state字母写错）\n    userName() {\n      return this.$store.state.user.userInfo.name;\n    },\n  },\n  methods: {\n    Searchs: function () {\n      //vue-router的最新版本引入了最新技术，当调用push会返回一个Promise对象\n      // let result=  this.$router.push({name: 'Search', params: {keyword: this.keyword}, query: {k: this.keyword.toUpperCase()}},()=>{},()=>{});\n      // this.$router.push({path:'/search'})\n      // this.$router.push({name: 'Search',\n      //  params: {keyword: this.keyword||undefined},\n      //  query: {big: this.keyword.toUpperCase()}},()=>{},()=>{\n\n      // //  捕获当前的错误||获取当前的$router属性\n      // //  console.log(this.$router)\n      // // console.log(error);\n      // });\n      // console.log(result);\n\n      if (this.$route.query) {\n        // 如果有query参数，同样也稍带过去\n        // 如果传递的params参数是空字符串时，需要使用Undefined\n        let location = {\n          name: \"Search\",\n          params: { keyword: this.keyword || undefined },\n        };\n        location.query = this.$route.query;\n        this.$router.push(location);\n      }\n    },\n    // 退出登录\n    async logout() {\n      // 退出登录需要做的事情（发请求通知服务器推出登录并且清除项目当中的数据userInfo）\n      try {\n        await this.$store.dispatch(\"userLogout\");\n        this.$router.push(\"/home\");\n      } catch (error) {\n        alert(error.message);\n      }\n    },\n  },\n  mounted() {\n    // 通过全局事件总线$bus清楚关键字\n    this.$bus.$on(\"clear\", () => {\n      this.keyword = \"\";\n    });\n  },\n};\n",null]}